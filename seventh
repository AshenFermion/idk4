--------------------------------------------------------------------------------
-- Q1) Create a function to display the job of an employee. Consider the employee name as 'SMITH'.

CREATE TABLE EMPT (
    EMPNO    NUMBER(4)     CONSTRAINT PK_EMP PRIMARY KEY,
    ENAME    VARCHAR2(10),
    JOB      VARCHAR2(9),
    MGR      NUMBER(4),
    HIREDATE DATE,
    SAL      NUMBER(7,2),
    COMM     NUMBER(7,2),
    DEPTNO   NUMBER(2)
);

INSERT INTO EMPT VALUES (7369, 'SMITH',  'CLERK',     7902, TO_DATE('17-DEC-1980', 'DD-MON-YYYY'), 800,  NULL, 20);
INSERT INTO EMPT VALUES (7499, 'ALLEN',  'SALESMAN',  7698, TO_DATE('20-FEB-1981', 'DD-MON-YYYY'), 1600, 300,  30);
INSERT INTO EMPT VALUES (7521, 'WARD',   'SALESMAN',  7698, TO_DATE('22-FEB-1981', 'DD-MON-YYYY'), 1250, 500,  30);
INSERT INTO EMPT VALUES (7566, 'JONES',  'MANAGER',   7839, TO_DATE('02-APR-1981', 'DD-MON-YYYY'), 2975, NULL, 20);
INSERT INTO EMPT VALUES (7698, 'BLAKE',  'MANAGER',   7839, TO_DATE('01-MAY-1981', 'DD-MON-YYYY'), 2850, NULL, 30);
INSERT INTO EMPT VALUES (7782, 'CLARK',  'MANAGER',   7839, TO_DATE('09-JUN-1981', 'DD-MON-YYYY'), 2450, NULL, 10);
INSERT INTO EMPT VALUES (7788, 'SCOTT',  'ANALYST',   7566, TO_DATE('19-APR-1987', 'DD-MON-YYYY'), 3000, NULL, 20);
INSERT INTO EMPT VALUES (7839, 'KING',   'PRESIDENT', NULL, TO_DATE('17-NOV-1981', 'DD-MON-YYYY'), 5000, NULL, 10);
INSERT INTO EMPT VALUES (7844, 'TURNER', 'SALESMAN', 7698, TO_DATE('08-SEP-1981', 'DD-MON-YYYY'), 1500,   0,  30);
INSERT INTO EMPT VALUES (7876, 'ADAMS',  'CLERK',     7788, TO_DATE('23-MAY-1987', 'DD-MON-YYYY'), 1100, NULL, 20);
INSERT INTO EMPT VALUES (7900, 'JAMES',  'CLERK',     7698, TO_DATE('03-DEC-1981', 'DD-MON-YYYY'),  950, NULL, 30);
INSERT INTO EMPT VALUES (7902, 'FORD',   'ANALYST',   7566, TO_DATE('03-DEC-1981', 'DD-MON-YYYY'), 3000, NULL, 20);

-- Create Function
CREATE OR REPLACE FUNCTION function1(name IN VARCHAR2)
RETURN VARCHAR2
IS
    j VARCHAR2(20);
BEGIN
    SELECT job INTO j
    FROM EMPT
    WHERE ename = name;

    RETURN j;
END;
/

-- Call Function in PL/SQL Block
DECLARE
    nm VARCHAR2(20) := '&name';
    v  VARCHAR2(20);
BEGIN
    v := function1(nm);
    DBMS_OUTPUT.PUT_LINE(v);
END;
/

--------------------------------------------------------------------------------
-- Q2) Create a function to display the largest number among three given numbers

CREATE OR REPLACE FUNCTION function1(a IN NUMBER, b IN NUMBER, c IN NUMBER)
RETURN NUMBER
IS
BEGIN
    IF a > b AND a > c THEN
        RETURN a;
    ELSIF b > a AND b > c THEN
        RETURN b;
    ELSE
        RETURN c;
    END IF;
END;
/

-- Call Function in PL/SQL Block
DECLARE
    a NUMBER := &a;
    b NUMBER := &b;
    c NUMBER := &c;
    d NUMBER;
BEGIN
    d := function1(a, b, c);
    DBMS_OUTPUT.PUT_LINE(d);
END;
/

--------------------------------------------------------------------------------
-- Q3) Create a function to calculate square and cube of a number

CREATE OR REPLACE FUNCTION f1(a IN NUMBER, cb OUT NUMBER)
RETURN VARCHAR2
IS
    sq NUMBER;
BEGIN
    sq := a * a;
    cb := a * a * a;
    RETURN 'The square is ' || sq || ' and cube is ' || cb;
END;
/

-- Call Function in PL/SQL Block
DECLARE
    num NUMBER := &num;
    cube NUMBER;
    result VARCHAR2(100);
BEGIN
    result := f1(num, cube);
    DBMS_OUTPUT.PUT_LINE(result);
END;
/

--------------------------------------------------------------------------------
-- Q4) Create a function to count the number of employees

CREATE OR REPLACE FUNCTION function1
RETURN NUMBER
IS
    n NUMBER;
BEGIN
    SELECT COUNT(*) INTO n
    FROM EMPT;
    RETURN n;
END;
/

-- Call Function in PL/SQL Block
DECLARE
    result NUMBER;
BEGIN
    result := function1;
    DBMS_OUTPUT.PUT_LINE('Number of employees: ' || result);
END;
/
